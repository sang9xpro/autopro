
entity Loggers {
    status String,
    logDetail Blob,
    lastUpdate Instant
}

entity LoggersFields {
	fieldName String
}

entity LoggersValues {
    value String
}

relationship OneToMany {
	Loggers {LoggersValues(loggerId)} to LoggersValues,
	LoggersFields {LoggersValues(fieldId)} to LoggersValues
}

entity History {
	url String,
    taskId Integer,
    deviceId Integer,
    accountId Integer,
    lastUpdate Instant
}

entity HistoryFields {
	fieldName String
}

entity HistoryValues {
    value String
}
relationship OneToMany {
	History {HistoryValues(historyId)} to HistoryValues,
	HistoryFields {HistoryValues(fieldsId)} to HistoryValues
}


enum DeviceStatus {
	Online,
    Offline
}

enum DeviceType{
    MOBILE,
    COMPUTER,
    TABLET,
    VPS,
    VMW,
    ELUMATOR
}

entity Accounts {
	userName String,
    password String,
    urlLogin String,
    profileFirefox String,
    profileChrome String,
    lastUpdate Instant,
    owner String,
    actived Integer min (1) max (1)
}

entity AccountFields {
	fieldName String
}

entity AccountValues {
    value String
}
relationship OneToMany {
	Accounts {AccountValues(accountId)} to AccountValues,
	AccountFields {AccountValues(fieldId)} to AccountValues
}

entity Tasks {
	taskName String,
    description String,
    source String,
    price Double,
    type TaskType
}

entity TaskFields {
	fieldName String
}

entity TaskValues {
	value String
}

relationship OneToMany {
	Tasks {TaskValues(taskId)} to TaskValues,
	TaskFields {TaskValues(fieldId)} to TaskValues
}

entity Applications {
	appName String,
    appCode String
}
entity ApplicationsFields {
	fieldName String
}
entity ApplicationsValues {
	value String
}
relationship OneToMany {
	Applications {ApplicationsValues(applicationsId)} to ApplicationsValues,
	ApplicationsFields {ApplicationsValues(fieldId)} to ApplicationsValues,
    Applications {Accounts(applicationsId)} to Accounts,
    Applications {Tasks(applicationsId)} to Tasks,
    Applications {Comments(applicationsId)} to Comments
}



entity Devices {
    ipAddress String,
    macAddress String,
    os String,
    deviceType DeviceType,
    status DeviceStatus,
    lastUpdate Instant,
    owner String
}

entity DevicesFields {
	fieldsName String
}

entity DeviceValues {
    value String
}

relationship OneToMany {
	Devices {DeviceValues(deviceId)} to DeviceValues,
	DevicesFields {DeviceValues(feildId)} to DeviceValues
}

entity SchedulerTask {
    startTime Instant,
    endTime Instant,
    countFrom Integer,
    countTo Integer,
    point Double,
    lastUpdate Instant,
    owner String,
    status SchedulerStatus
}

entity SchedulerTaskFields {
	fieldName String
}
entity SchedulerTaskValues {
	value String
}

relationship OneToMany {
	SchedulerTask {SchedulerTaskValues(schedulerTaskId)} to SchedulerTaskValues,
	SchedulerTaskFields {SchedulerTaskValues(feildId)} to SchedulerTaskValues
}

enum SchedulerStatus {
	Open,
	Inprogess,
    Completed
}

entity Facebook {
	name String,
    url String,
    idOnFb String,
    type FbType
}

entity FacebookFields {
	fieldName String
}

entity FacebookValues {
    value String
}

relationship OneToMany {
	Facebook {FacebookValues(facebookId)} to FacebookValues,
	FacebookFields {FacebookValues(feildId)} to FacebookValues
}


entity MostOfContent {
	urlOriginal String,
    contentText String,
    postTime Instant,
    numberLike Integer,
    numberComment Integer
}

entity MostOfContFields {
	fieldName String
}

entity MostOfContValues {
    value String
}

relationship OneToMany {
	MostOfContent {MostOfContValues(mostOfContentId)} to MostOfContValues,
	MostOfContFields {MostOfContValues(feildId)} to MostOfContValues
}
entity Comments {
	content  String,
    image Blob,
    owner String
}

entity CommentsFields {
	fieldName String
}

entity CommentsValues {
    value String
}

relationship OneToMany {
	Comments {CommentsValues(commentId)} to CommentsValues,
	CommentsFields {CommentsValues(feildId)} to CommentsValues
}


enum FbType {
	Post,
    People,
	Image,
    Video,
    Page,
    Location,
    Group
}


enum TaskType {
	Stream,
    NonStream
}

entity Country {
	name String required,
    code String required
}


service * with serviceImpl